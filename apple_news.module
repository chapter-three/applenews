<?php

/**
 * @file
 * Apple News module file.
 */

define('APPLE_NEWS_API_VERSION', 1);
define('CURL_SUPPORTED_VERSION', '4.6.9');
define('APPLE_NEWS_SUPPORTED_VERSION', '0.3.3');

// Load Batch API helper functions.
module_load_include('inc', 'apple_news', 'apple_news.batch');

/**
 * Implements hook_init().
 */
function apple_news_init() {
  $libraries = [
    'php-curl-class' => [
      'version' => CURL_SUPPORTED_VERSION,
      'path'    => 'sites/all/libraries/php-curl-class'
    ],
    'AppleNews'      => [
      'version' => APPLE_NEWS_SUPPORTED_VERSION,
      'path'    => 'sites/all/libraries/AppleNews'
    ]
  ];
  foreach ($libraries as $name => $info) {
    // Detect and load PHP library.
    if (($library = libraries_detect($name)) &&
        !empty($library['installed']) &&
        $library['version'] == $info['version']
    ) {
      libraries_load($name);
    }
    else {
      $error_message = !empty($library['error message']) ? $library['error message'] : '';
      $msg = t('Please <a href="!link" target="_blank"><strong>download @name</strong> (version <strong>@v</strong>)</a> library to <strong><em>@path</em></strong> directory or <a href="!install">try autoinstall</a>.',
        [
          '!link'    => $library['download url'],
          '@name'    => $library['name'],
          '@path'    => $info['path'],
          '@v'       => $info['version'],
          '!install' => url('admin/apple-news/install'),
        ]
      );
      // Display message in command line.
      if (drupal_is_cli() && function_exists('drush_log')) {
        drush_log($error_message . ' ' . $msg, 'error');
      }
      else {
        drupal_set_message($error_message . ' ' . $msg, 'error');
      }
    }
  }
}

/**
 * Implements hook_libraries_info().
 */
function apple_news_libraries_info() {

  $libraries['AppleNews'] = [
    'name' => 'Apple News',
    'vendor url' => 'https://github.com/chapter-three/AppleNews',
    'download url' => 'https://github.com/chapter-three/AppleNews/archive/' . APPLE_NEWS_SUPPORTED_VERSION . '.zip',
    'files' => [
      'php' => [
        'autoload.php',
      ],
    ],
    'version arguments' => [
      'file' => 'src/PublisherAPI.php',
      'pattern' => "/'([^']+)'/",
      'lines' => 25,
      'cols' => 200,
    ],
    'versions' => [
      (string) APPLE_NEWS_SUPPORTED_VERSION => [],
    ],
  ];

  $libraries['php-curl-class'] = [
    'name' => 'PHP Curl Class',
    'vendor url' => 'https://github.com/php-curl-class/php-curl-class',
    'download url' => 'https://github.com/php-curl-class/php-curl-class/archive/' . CURL_SUPPORTED_VERSION . '.zip',
    'files' => [
      'php' => [
        'src/Curl/Curl.php',
        'src/Curl/MultiCurl.php',
      ],
    ],
    'version arguments' => [
      'file' => 'src/Curl/Curl.php',
      'pattern' => "/'([^']+)'/",
      'lines' => 25,
      'cols' => 10,
    ],
    'versions' => [
      (string) CURL_SUPPORTED_VERSION => [],
    ],
  ];

  return $libraries;
}

/**
 * Implements hook_requirements().
 */
function apple_news_requirements($phase) {
  $requirements = [];
  if ($phase == 'runtime') {
    $libraries = [
      'php-curl-class' => CURL_SUPPORTED_VERSION,
      'AppleNews'      => APPLE_NEWS_SUPPORTED_VERSION,
    ];
    foreach ($libraries as $name => $version) {
      if ($library = libraries_detect($name)) {
        $msg = '';
        $lib_version = !empty($library['version']) ? $library['version'] : '';
        $severity = REQUIREMENT_OK;
        if ($lib_version != $version) {
          $msg = t("You're using unsupported version of the <em>@name</em> library.",
              [
                '@name' => $library['name']
              ]
            )
           . ' '
           . t('Please <a href="!link" target="_blank">download version (@v)</a>. to <em>@path</em>',
              [
                '!link' => $library['download url'],
                '@v'    => $version,
                '@path' => !empty($library['library path']) ? $library['library path'] : t('See README.md'),
              ]
            );
          $severity = REQUIREMENT_ERROR;
        }
        $requirements[$name] = [
          'title'       => !empty($library['name']) ? $library['name'] : 'N/A',
          'value'       => !empty($library['version']) ? $library['version'] : 'N/A',
          'severity'    => $severity,
          'description' => $msg,
        ];
      }
    }
  }
  return $requirements;
}

/**
 * Implements hook_hook_info().
 */
function apple_news_hook_info() {

  // Form hooks see {module_name}.form.inc
  $form = ['group' => 'form'];
  $hooks['form_alter'] = $form;

  // Entity hooks see {module_name}.entity.inc
  $entity = ['group' => 'entity'];
  $hooks['entity_load'] = $entity;
  $hooks['entity_insert'] = $entity;
  $hooks['entity_update'] = $entity;
  $hooks['entity_delete'] = $entity;
  $hooks['entity_presave'] = $entity;

  // Views hooks see {module_name}.views.inc
  $views = ['group' => 'views'];
  $hooks['views_api'] = $views;
  $hooks['views_data'] = $views;
  $hooks['views_default_views'] = $views;

  // Apple News hooks see {module_name}.apple_news.inc
  $apple_news = ['group' => 'apple_news'];
  $hooks['apple_news_insert'] = $apple_news;
  $hooks['apple_news_update'] = $apple_news;
  $hooks['apple_news_delete'] = $apple_news;
  $hooks['apple_news_api_alter'] = $apple_news;
  $hooks['apple_news_api'] = $apple_news;

  return $hooks;

}

/**
 * Implements hook_help().
 */
function apple_news_help($path, $arg) {
  $help = '';
  switch ($path) {
    case 'admin/help#apple_news':
      $help = check_markup(file_get_contents(dirname(__FILE__) . '/README.md'), variable_get('apple_news_help_format', 'filtered_html'));
  }
  return $help;
}

/**
 * Implements hook_permission().
 */
function apple_news_permission() {
  return [
    'administer apple news' => [
      'title' => t('Administer Apple News'),
      'description' => t('Perform administration tasks for Apple News'),
    ],
  ];
}

/**
 * Implements hook_menu().
 */
function apple_news_menu() {

  $items['admin/config/content/apple-news'] = [
    'title' => 'Apple News',
    'description' => 'Configure content export to Apple News.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_settings_exports_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
  ];

  $items['admin/config/content/apple-news/exports'] = [
    'title' => 'Exports',
    'description' => 'List and edit Apple News export configurations.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  ];

  $items['admin/config/content/apple-news/exports/add'] = [
    'title' => 'Add Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_export_add_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 1,
  ];

  $items['admin/config/content/apple-news/export/%apple_news_export'] = [
    'title' => 'Edit Export',
    'description' => 'Apple News Export configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_export_edit_form', 5],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
  ];

  $items['admin/config/content/apple-news/export/%apple_news_export/delete'] = [
    'title' => 'Delete Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_export_delete_form', 5],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
  ];

  $items['admin/config/content/apple-news/export/%apple_news_export/%/%'] = [
    'title' => 'Edit Export Destination',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_export_destination_edit_form', 5, 6, 7],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
  ];

  $items['admin/config/content/apple-news/export/%apple_news_export/%/%/delete'] = [
    'title' => 'Delete Export Destination',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_export_destination_delete_form', 5, 6, 7],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
  ];

  $items['admin/config/content/apple-news/settings'] = [
    'title' => 'Settings',
    'description' => 'Apple News Publisher API configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_settings_api_credentials_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  ];

  $items['admin/config/content/apple-news/settings/default'] = [
    'title' => 'Credentials',
    'description' => 'Apple News Publisher API credentials.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  ];

  $items['admin/config/content/apple-news/settings/delete'] = [
    'title' => 'Delete configuration',
    'description' => 'Delete Apple News configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_settings_delete_configuration_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'weight' => 1,
  ];

  $items['admin/config/content/apple-news/settings/channels'] = [
    'title' => 'Channels',
    'description' => 'Apple News Publisher API channels.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_settings_channels_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  ];

  // [channel-id]
  $items['admin/config/content/apple-news/settings/channels/%/delete'] = [
    'title' => 'Delete channel',
    'description' => 'Apple News Publisher API delete channel.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_settings_delete_channel_form', 6],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'weight' => 1,
  ];

  // [channel-id]
  $items['admin/config/content/apple-news/settings/channels/%/sections'] = [
    'title' => 'View Channel Sections',
    'description' => 'View Apple News channel sections.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_settings_channel_sections_form', 6],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'weight' => 1,
  ];

  // Delete an article from Apple News channel
  // [entity-type]/[entity-id]/[article-id]/[channel-id]
  $items['admin/config/content/apple-news/%/%/%/%/delete'] = [
    'title' => 'Delete Apple News article',
    'description' => 'Apple News Publisher API delete channel.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_settings_delete_article_form', 4, 5, 6, 7],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'weight' => 1,
  ];

  // [entity-type]/[entity-id]/[entity-revision]
  $items['admin/config/content/apple-news/%/%/%/download'] = [
    'title' => 'Download article.json file',
    'description' => 'Download previewable Apple News formatted document.',
    'page callback' => 'apple_news_download_article_json',
    'page arguments' => [4, 5, 6],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'type' => MENU_CALLBACK,
    'weight' => 1,
  ];

  // Library autoinstall path.
  $items['admin/apple-news/install'] = [
    'title' => 'Autoinstall Apple News dependant PHP libraries',
    'description' => 'Download and unzip PHP libraries.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['apple_news_autoinstall_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'apple_news.admin.inc',
    'type' => MENU_CALLBACK,
  ];

  return $items;
}

/**
 * Implements OBJECT_load().
 *
 * @param int $id
 *   ID of export.
 *
 * @return ApplenewsExport
 *   Fully-loaded export object.
 */
function apple_news_export_load($id) {
  $query = db_select('apple_news_status', 's')
    ->fields('s', ['instance'])
    ->condition('s.id', $id);
  if ($row = $query->execute()->fetchObject()) {
    if ($export = unserialize($row->instance)) {
      $export->id = $id;
      return $export;
    }
    $msg = t('Export class id %id could not be unserialized');
    $var = [
      '%id' => $id,
    ];
    watchdog('apple_news', $msg, $var, WATCHDOG_ERROR);
  }
  return NULL;
}

/**
 * Implements hook_theme().
 */
function apple_news_theme($existing, $type, $theme, $path) {
  return [
    'apple_news_export_edit_form' => [
      'render element' => 'form',
      'file'           => 'apple_news.admin.inc',
    ],
  ];
}

/**
 * Implements hook_apple_news_api().
 */
function apple_news_apple_news_api() {
  return [
    'api' => APPLE_NEWS_API_VERSION,
    'exports' => [
      'node' => [
        'class' => 'ApplenewsExportNode',
        'name' => t('Nodes'),
        'description' => t('Configurable node export.'),
        'default' => 'apple_news_apple_news_api_export_default_node',
      ],
    ],
    'sources' => [
      'value' => [
        'class' => 'ApplenewsSourceValue',
        'name' => 'Literal Value',
      ],
      'node' => [
        'class' => 'ApplenewsSourceNode',
        'name' => 'Node',
      ],
      'user' => [
        'class' => 'ApplenewsSourceUser',
        'name' => 'User',
      ],
      'field' => [
        'class' => 'ApplenewsSourceField',
        'name' => 'Field Value',
      ],
      'file' => [
        'class' => 'ApplenewsSourceFieldFile',
        'name' => 'File Field',
      ],
    ],
    'destinations' => [
      'layout' => [
        'class' => 'ApplenewsDestinationLayout',
        'name' => 'Layout',
      ],
      'componentLayout' => [
        'class' => 'ApplenewsDestinationComponentLayout',
        'name' => 'Component Layout',
      ],
      'container' => [
        'class' => 'ApplenewsDestinationContainer',
        'name' => 'Container',
      ],
      'body' => [
        'class' => 'ApplenewsDestinationBody',
        'name' => 'Body',
      ],
      'bodyphoto' => [
        'class' => 'ApplenewsDestinationBodyPhoto',
        'name' => 'Body and Photos',
      ],
      'images' => [
        'class' => 'ApplenewsDestinationImages',
        'name' => 'Mosaic/Gallery',
      ],
      'ad' => [
        'class' => 'ApplenewsDestinationAd',
        'name' => 'Advertisement',
      ],
      'text' => [
        'class' => 'ApplenewsDestinationText',
        'name' => 'Text',
      ],
      'image' => [
        'class' => 'ApplenewsDestinationImage',
        'name' => 'Image',
      ],
      'scalable_image' => [
        'class' => 'ApplenewsDestinationScalableImage',
        'name' => 'Scalable Image',
      ],
      'divider' => [
        'class' => 'ApplenewsDestinationDivider',
        'name' => 'Divider',
      ],
    ],
  ];
}

/**
 * Callback to define default node export.
 */
function apple_news_apple_news_api_export_default_node(ApplenewsExportNode $export) {
  $entities_info = entity_get_info('node');
  if (isset($entities_info['bundles']['article'])) {
    $export->bundles = ['article'];
  }
  /** @var ApplenewsDestinationText $component */
  $component = apple_news_new_destination('apple_news', 'text');
  $component->weight = '0';
  $component->title = 'Title';
  $component
    ->setSetting('text', [
      'source' => '::::apple_news::node::label',
      'value' => '',
    ])
    ->setSetting('component', 'title')
    ->setSetting('heading', '')
    ->setSetting('format', '');
  $export->addComponent($component);
  /** @var ApplenewsDestinationBodyPhoto $component */
  $component = apple_news_new_destination('apple_news', 'body');
  $component->weight = '1';
  $component->title = 'Body';
  $component
    ->setSetting('text', [
      'source' => '::::apple_news::field::node::body::value_sanitized',
      'value' => '',
    ])
    ->setSetting('format', 'markdown');
  $export->addComponent($component);
  /** @var ApplenewsDestinationScalableImage $component */
  $component = apple_news_new_destination('apple_news', 'scalable_image');
  $component->weight = '2';
  $component->title = 'Image';
  $component
    ->setSetting('type', 'photo')
    ->setSetting('file', [
      'source' => '::::apple_news::file::node::field_image::uri',
      'value' => '',
    ])
    ->setSetting('caption', [
      'source' => '::::apple_news::file::node::field_image::alt',
      'value' => '',
    ])
    ->setSetting('format', 'markdown');
  $export->addComponent($component);
}

/**
 * Submit handler for _apple_news_form_alter_node_form().
 */
function _apple_news_form_alter_node_form_submit(&$form, &$form_state) {
  $values = $form_state['values']['apple_news'];
  if (!empty($form['#node']) && !empty($form['#node']->nid) &&
      !empty($values['exports'])
  ) {

    $entity = $form['#node'];
    $entity_type = 'node';
    $revision_id = $entity_id = $entity->nid;

    /*
    // Don't do this, save somewhere else.
    $post = new ApplenewsDatabase();
    $post->setPostId($entity_type, $entity_id, $revision_id);
    $post->setExport($form_state['values']['apple_news']['exports']);
    */

  }
}
