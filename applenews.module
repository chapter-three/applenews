<?php

/**
 * @file
 * Apple News module file.
 */

// This module's API version.
define('APPLENEWS_API_VERSION', 1);
define('APPLENEWS_CURL_SUPPORTED_VERSION', '4.6.9');
define('APPLENEWS_APPLENEWSAPI_SUPPORTED_VERSION', '0.3.5');

// Load Batch API helper functions.
module_load_include('inc', 'applenews', 'applenews.batch');

/**
 * Implements hook_init().
 */
function applenews_init() {
  $libraries = [
    'php-curl-class' => [
      'version' => APPLENEWS_CURL_SUPPORTED_VERSION,
      'path'    => 'sites/all/libraries/php-curl-class'
    ],
    'AppleNewsAPI'      => [
      'version' => APPLENEWS_APPLENEWSAPI_SUPPORTED_VERSION,
      'path'    => 'sites/all/libraries/AppleNewsAPI'
    ]
  ];
  foreach ($libraries as $name => $info) {
    // Detect and load PHP library.
    if (($library = libraries_detect($name)) &&
        !empty($library['installed']) &&
        $library['version'] == $info['version']
    ) {
      libraries_load($name);
    }
    else {
      $error_message = !empty($library['error message']) ? $library['error message'] : '';
      $msg = t('Please <strong>!link</strong> (version <strong>@v</strong>)</a> library to <strong><em>@path</em></strong> directory or !install.',
        [
          '!link'    => l(t('download @name', ['@name' => $library['name']]), $library['download url']),
          '@name'    => $library['name'],
          '@path'    => $info['path'],
          '@v'       => $info['version'],
          '!install' => l(t('try auto-install'), 'admin/applenews/install'),
        ]
      );
      // Display message in command line.
      if (drupal_is_cli() && function_exists('drush_log')) {
        drush_log($error_message . ' ' . $msg, 'error');
      }
      else {
        drupal_set_message($error_message . ' ' . $msg, 'error');
      }
    }
  }
}

/**
 * Implements hook_libraries_info().
 */
function applenews_libraries_info() {

  $libraries['AppleNewsAPI'] = [
    'name' => 'Apple News',
    'vendor url' => 'https://github.com/chapter-three/AppleNewsAPI',
    'download url' => 'https://github.com/chapter-three/AppleNewsAPI/archive/' . APPLENEWS_APPLENEWSAPI_SUPPORTED_VERSION . '.zip',
    'files' => [
      'php' => [
        'autoload.php',
      ],
    ],
    'version arguments' => [
      'file' => 'src/PublisherAPI.php',
      'pattern' => "/'([^']+)'/",
      'lines' => 25,
      'cols' => 200,
    ],
    'versions' => [
      (string) APPLENEWS_APPLENEWSAPI_SUPPORTED_VERSION => [],
    ],
  ];

  $libraries['php-curl-class'] = [
    'name' => 'PHP Curl Class',
    'vendor url' => 'https://github.com/php-curl-class/php-curl-class',
    'download url' => 'https://github.com/php-curl-class/php-curl-class/archive/' . APPLENEWS_CURL_SUPPORTED_VERSION . '.zip',
    'files' => [
      'php' => [
        'src/Curl/Curl.php',
        'src/Curl/MultiCurl.php',
      ],
    ],
    'version arguments' => [
      'file' => 'src/Curl/Curl.php',
      'pattern' => "/'([^']+)'/",
      'lines' => 25,
      'cols' => 10,
    ],
    'versions' => [
      (string) APPLENEWS_CURL_SUPPORTED_VERSION => [],
    ],
  ];

  return $libraries;
}

/**
 * Implements hook_hook_info().
 */
function applenews_hook_info() {

  // Form hooks see {module_name}.form.inc
  $form = ['group' => 'form'];
  $hooks['form_alter'] = $form;

  // Entity hooks see {module_name}.entity.inc
  $entity = ['group' => 'entity'];
  $hooks['entity_load'] = $entity;
  $hooks['entity_insert'] = $entity;
  $hooks['entity_update'] = $entity;
  $hooks['entity_delete'] = $entity;
  $hooks['entity_presave'] = $entity;

  // Views hooks see {module_name}.views.inc
  $views = ['group' => 'views'];
  $hooks['views_api'] = $views;
  $hooks['views_data'] = $views;
  $hooks['views_default_views'] = $views;

  // Apple News hooks see {module_name}.applenews.inc
  $applenews = ['group' => 'applenews'];
  $hooks['applenews_insert'] = $applenews;
  $hooks['applenews_update'] = $applenews;
  $hooks['applenews_delete'] = $applenews;
  $hooks['applenews_api_alter'] = $applenews;
  $hooks['applenews_api'] = $applenews;

  return $hooks;

}

/**
 * Implements hook_help().
 */
function applenews_help($path, $arg) {
  $help = '';
  switch ($path) {
    case 'admin/help#applenews':
      $help = check_markup(file_get_contents(dirname(__FILE__) . '/README.md'), variable_get('applenews_help_format', 'filtered_html'));
  }
  return $help;
}

/**
 * Implements hook_permission().
 */
function applenews_permission() {
  return [
    'administer apple news' => [
      'title' => t('Administer Apple News'),
      'description' => t('Perform administration tasks for Apple News'),
    ],
  ];
}

/**
 * Implements hook_menu().
 */
function applenews_menu() {

  $items['admin/config/content/applenews'] = [
    'title' => 'Apple News',
    'description' => 'Configure content export to Apple News.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_settings_exports_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
  ];

  $items['admin/config/content/applenews/exports'] = [
    'title' => 'Exports',
    'description' => 'List and edit Apple News export configurations.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  ];

  $items['admin/config/content/applenews/exports/add'] = [
    'title' => 'Add Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_export_add_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 1,
  ];

  $items['admin/config/content/applenews/export/%applenews_export'] = [
    'title' => 'Edit Export',
    'description' => 'Apple News Export configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_export_edit_form', 5],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
  ];

  $items['admin/config/content/applenews/export/%applenews_export/delete'] = [
    'title' => 'Delete Export',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_export_delete_form', 5],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
  ];

  $items['admin/config/content/applenews/export/%applenews_export/%/%'] = [
    'title' => 'Edit Export Destination',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_export_destination_edit_form', 5, 6, 7],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
  ];

  $items['admin/config/content/applenews/export/%applenews_export/%/%/delete'] = [
    'title' => 'Delete Export Destination',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_export_destination_delete_form', 5, 6, 7],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
  ];

  $items['admin/config/content/applenews/settings'] = [
    'title' => 'Settings',
    'description' => 'Apple News Publisher API configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_settings_api_credentials_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  ];

  $items['admin/config/content/applenews/settings/default'] = [
    'title' => 'Credentials',
    'description' => 'Apple News Publisher API credentials.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  ];

  $items['admin/config/content/applenews/settings/delete'] = [
    'title' => 'Delete configuration',
    'description' => 'Delete Apple News configuration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_settings_delete_configuration_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'weight' => 1,
  ];

  $items['admin/config/content/applenews/settings/channels'] = [
    'title' => 'Channels',
    'description' => 'Apple News Publisher API channels.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_settings_channels_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  ];

  // [channel-id]
  $items['admin/config/content/applenews/settings/channels/%/delete'] = [
    'title' => 'Delete channel',
    'description' => 'Apple News Publisher API delete channel.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_settings_delete_channel_form', 6],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'weight' => 1,
  ];

  // [channel-id]
  $items['admin/config/content/applenews/settings/channels/%/sections'] = [
    'title' => 'View Channel Sections',
    'description' => 'View Apple News channel sections.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_settings_channel_sections_form', 6],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'weight' => 1,
  ];

  // Delete an article from Apple News channel
  // [entity-type]/[entity-id]/[article-id]/[channel-id]
  $items['admin/config/content/applenews/%/%/%/%/delete'] = [
    'title' => 'Delete Apple News article',
    'description' => 'Apple News Publisher API delete channel.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_settings_delete_article_form', 4, 5, 6, 7],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'weight' => 1,
  ];

  // [entity-type]/[entity-id]/[entity-revision]
  $items['admin/config/content/applenews/%/%/%/download'] = [
    'title' => 'Download article.json file',
    'description' => 'Download previewable Apple News formatted document.',
    'page callback' => 'applenews_download_article_json',
    'page arguments' => [4, 5, 6],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'type' => MENU_CALLBACK,
    'weight' => 1,
  ];

  // Library autoinstall path.
  $items['admin/applenews/install'] = [
    'title' => 'Autoinstall Apple News dependant PHP libraries',
    'description' => 'Download and unzip PHP libraries.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['applenews_autoinstall_form'],
    'access arguments' => ['administer apple news'],
    'file' => 'applenews.admin.inc',
    'type' => MENU_CALLBACK,
  ];

  return $items;
}

/**
 * Implements OBJECT_load().
 *
 * @param int $id
 *   ID of export.
 *
 * @return ApplenewsExport
 *   Fully-loaded export object.
 */
function applenews_export_load($id) {
  /** @var SelectQuery $query */
  $query = db_select('applenews_status', 's')
    ->fields('s', ['instance'])
    ->condition('s.id', $id);
  if ($row = $query->execute()->fetchObject()) {
    if ($export = unserialize($row->instance)) {
      $export->id = $id;
      return $export;
    }
    $msg = t('Export class id %id could not be unserialized');
    $var = [
      '%id' => $id,
    ];
    watchdog('applenews', $msg, $var, WATCHDOG_ERROR);
  }
  return NULL;
}

/**
 * Implements hook_element_info().
 */
function applenews_element_info() {
  // Element for data source -- currently a slightly modified fieldset.
  $types['applenews_source'] = system_element_info()['fieldset'];
  $types['applenews_source']['#pre_render'][] = 'applenews_form_pre_render_source';

  // Element for Apple News supported units for component margins and height.
  $types['applenews_supported_units'] = [
    '#input' => TRUE,
    '#autocomplete_path' => FALSE,
    '#process' => ['applenews_form_process_supported_units'],
    '#theme_wrappers' => ['applenews_inline_form_element'],
  ];

  return $types;
}

/**
 * FAPI #pre_render callback.
 *
 * @see applenews_element_info()
 */
function applenews_form_pre_render_source($element) {
  if (isset($element['value'])) {
    $source_name = ':input[name="' . $element['source']['#name'] . '"]';
    $value_element = &$element['value'];
    foreach ($value_element['#applenews_visible'] as $value) {
      $value_element['#states']['visible'][][$source_name]['value'] = $value;
    }
  }
  return $element;
}

/**
 * FAPI #process callback.
 *
 * @see applenews_element_info()
 */
function applenews_form_process_supported_units($element, &$form_state, $complete_form) {
  $element['#tree'] = TRUE;
  $element['value'] = [
    '#type' => 'textfield',
    '#default_value' => isset($element['#default_value']['value']) ? $element['#default_value']['value'] : FALSE,
  ];
  $element['units'] = [
    '#type' => 'select',
    '#options' => [
      'pt' => t('Points'),
      'vh' => t('Viewport height'),
      'vw' => t('Viewport width'),
      'vmin' => t('Viewport shortest side'),
      'vmax' => t('Viewport longest side'),
      'gut' => t('Column gutters'),
      'cw' => t('Component width'),
    ],
    '#default_value' => isset($element['#default_value']['units']) ? $element['#default_value']['units'] : FALSE,
  ];
  return $element;
}

/**
 * FAPI #pre_render callback.
 *
 * @see ApplenewsDestinationComponentLayout::getConfigForm()
 */
function applenews_form_pre_render_margin($element) {
  $source_name = ':input[name="' . $element['type']['#name'] . '"]';
  $element['value']['#states']['visible'][][$source_name]['value'] = 'value';
  $element['top']['#states']['visible'][][$source_name]['value'] = 'margin';
  $element['bottom']['#states']['visible'][][$source_name]['value'] = 'margin';
  return $element;
}

/**
 * FAPI #pre_render callback.
 *
 * @see ApplenewsDestinationComponentLayout::getConfigForm()
 */
function applenews_form_pre_render_content_inset($element) {
  $source_name = ':input[name="' . $element['type']['#name'] . '"]';
  $element['default']['#states']['visible'][][$source_name]['value'] = 'default';
  $element['top']['#states']['visible'][][$source_name]['value'] = 'contentInset';
  $element['right']['#states']['visible'][][$source_name]['value'] = 'contentInset';
  $element['bottom']['#states']['visible'][][$source_name]['value'] = 'contentInset';
  $element['left']['#states']['visible'][][$source_name]['value'] = 'contentInset';
  return $element;
}

/**
 * FAPI #pre_render callback.
 *
 * @see ApplenewsDestinationComponent::getConfigForm()
 */
function applenews_form_pre_render_component_layout($element) {
  $source_name = ':input[name="' . $element['id']['#name'] . '"]';
  $element['custom']['#states']['visible'][][$source_name]['value'] = '';
  return $element;
}

/**
 * Formats child form elements as inline elements.
 *
 * Copied from examples module.
 *
 * @see theme_form_example_inline_form_element()
 */
function theme_applenews_inline_form_element($variables) {
  $element = $variables['element'];

  // Add element #id for #type 'item'.
  if (isset($element['#markup']) && !empty($element['#id'])) {
    $attributes['id'] = $element['#id'];
  }
  // Add element's #type and #name as class to aid with JS/CSS selectors.
  $attributes['class'] = array('form-item');
  if (!empty($element['#type'])) {
    $attributes['class'][] = 'form-type-' . strtr($element['#type'], '_', '-');
  }
  if (!empty($element['#name'])) {
    $attributes['class'][] = 'form-item-' . strtr($element['#name'],
        array(
          ' ' => '-',
          '_' => '-',
          '[' => '-',
          ']' => '',
        )
      );
  }
  // Add a class for disabled elements to facilitate cross-browser styling.
  if (!empty($element['#attributes']['disabled'])) {
    $attributes['class'][] = 'form-disabled';
  }
  $output = '<div' . drupal_attributes($attributes) . '>' . "\n";

  // If #title is not set, we don't display any label or required marker.
  if (!isset($element['#title'])) {
    $element['#title_display'] = 'none';
  }
  $prefix = isset($element['#field_prefix']) ? '<span class="field-prefix">' . $element['#field_prefix'] . '</span> ' : '';
  $suffix = isset($element['#field_suffix']) ? ' <span class="field-suffix">' . $element['#field_suffix'] . '</span>' : '';

  switch ($element['#title_display']) {
    case 'before':
      $output .= ' ' . theme('form_element_label', $variables);
      $output .= ' ' . '<div class="container-inline">' . $prefix . $element['#children'] . $suffix . "</div>\n";
      break;

    case 'invisible':
    case 'after':
      $output .= ' ' . $prefix . $element['#children'] . $suffix;
      $output .= ' ' . theme('form_element_label', $variables) . "\n";
      break;

    case 'none':
    case 'attribute':
      // Output no label and no required marker, only the children.
      $output .= ' ' . $prefix . $element['#children'] . $suffix . "\n";
      break;
  }

  if (!empty($element['#description'])) {
    $output .= ' <div class="description">' . $element['#description'] . "</div>\n";
  }

  $output .= "</div>\n";

  return $output;
}

/**
 * Implements hook_theme().
 */
function applenews_theme($existing, $type, $theme, $path) {
  return [
    'applenews_export_edit_form' => [
      'render element' => 'form',
      'file'           => 'applenews.admin.inc',
    ],
    'applenews_inline_form_element' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Implements hook_applenews_api().
 */
function applenews_applenews_api() {
  return [
    'api' => APPLENEWS_API_VERSION,
    'exports' => [
      'node' => [
        'class' => 'ApplenewsExportNode',
        'name' => t('Nodes'),
        'description' => t('Configurable node export.'),
      ],
      'node_left' => [
        'class' => 'ApplenewsExportNodePreConfigured',
        'name' => t('Nodes (left-aligned)'),
        'description' => t('Configurable node export, pre-configured left-aligned.'),
        'arguments' => [
          'alignment' => 'left',
        ],
      ],
      'node_centered' => [
        'class' => 'ApplenewsExportNodePreConfigured',
        'name' => t('Nodes (center-aligned)'),
        'description' => t('Configurable node export, pre-configured center-aligned.'),
        'arguments' => [
          'alignment' => 'center',
        ],
      ],
      'node_right' => [
        'class' => 'ApplenewsExportNodePreConfigured',
        'name' => t('Nodes (right-aligned)'),
        'description' => t('Configurable node export, pre-configured right-aligned.'),
        'arguments' => [
          'alignment' => 'right',
        ],
      ],
    ],
    'sources' => [
      'value' => [
        'class' => 'ApplenewsSourceValue',
        'name' => 'Literal Value',
      ],
      'node' => [
        'class' => 'ApplenewsSourceNode',
        'name' => 'Node',
      ],
      'user' => [
        'class' => 'ApplenewsSourceUser',
        'name' => 'User',
      ],
      'field' => [
        'class' => 'ApplenewsSourceField',
        'name' => 'Field Value',
      ],
      'file' => [
        'class' => 'ApplenewsSourceFieldFile',
        'name' => 'File Field',
      ],
    ],
    'destinations' => [
      'layout' => [
        'class' => 'ApplenewsDestinationLayout',
        'name' => 'Layout',
      ],
      'metadata' => [
        'class' => 'ApplenewsDestinationMetadata',
        'name' => 'metadata',
      ],
      'componentLayout' => [
        'class' => 'ApplenewsDestinationComponentLayout',
        'name' => 'Component Layout',
      ],
      'container' => [
        'class' => 'ApplenewsDestinationContainer',
        'name' => 'Container',
      ],
      'body' => [
        'class' => 'ApplenewsDestinationBody',
        'name' => 'Body',
      ],
      'bodyphoto' => [
        'class' => 'ApplenewsDestinationBodyPhoto',
        'name' => 'Body and Photos',
      ],
      'images' => [
        'class' => 'ApplenewsDestinationImages',
        'name' => 'Mosaic/Gallery',
      ],
      'ad' => [
        'class' => 'ApplenewsDestinationAd',
        'name' => 'Advertisement',
      ],
      'text' => [
        'class' => 'ApplenewsDestinationText',
        'name' => 'Text',
      ],
      'image' => [
        'class' => 'ApplenewsDestinationImage',
        'name' => 'Image',
      ],
      'scalable_image' => [
        'class' => 'ApplenewsDestinationScalableImage',
        'name' => 'Scalable Image',
      ],
      'divider' => [
        'class' => 'ApplenewsDestinationDivider',
        'name' => 'Divider',
      ],
    ],
  ];
}
